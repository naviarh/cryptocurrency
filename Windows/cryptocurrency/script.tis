//(function(){

	// Установка параметров главного окна
	view.windowState = View.WINDOW_SHOWN
	view.windowBlurbehind = #none
	view.windowMinimizable = false
	view.windowMaximizable = false
	view.windowResizable = false
	view.windowTopmost = true
	// Установка окна под курсором мыши
	var mouseWindow = function() {
		var (sw,sh) = view.screenBox(#frame,#dimension)
		//var (bw,bh) = view.box(#dimension)
		var (bw,bh) = (150,60) // размеры окна
		var (cx,cy) = view.cursorLocation()
		var (x,y) = (cx-(bw/2),cy-(bh/2))
		if (x < 0) { x = 0}
		if (y < 0) { y = 0 }
		if (x+bw > sw) { x = sw-bw }
		if (y+bh > sh) { y = sh-bh }
		view.move(x,y,bw,bh)
	}
	event complete (evt) {
		settingsReset()
		mouseWindow()
	}
	// Создание окна настроек
	var view2 = view.window{
		type: View.TOOL_WINDOW,
		state: View.WINDOW_HIDDEN,
		width: 400,
		height: 300,
		url: "options.html",
		//html: "hello",
		//caption: "Settings"
		//alignment: 5,
		//screen: view.screen
	}
	view2.windowBlurbehind = #none
	view2.windowMinimizable = false
	view2.windowMaximizable = false
	view2.windowResizable = false
	view2.windowTopmost = true
	// Функция генерации иконки приложения
	function generateImage()
	{
	  function painter(gfx) // generates 100 random lines on graphics
	  {
		for(var n = 0; n < 10; ++n)
		{
		  var x1 = rand(48)
		  var x2 = rand(48)
		  var y1 = rand(48)
		  var y2 = rand(48)
		  gfx.lineWidth(1 + rand(6)) // 1..7
		  gfx.lineColor(color(rand(256),rand(256),rand(256)))
		  gfx.line(x1,y1,x2,y2)
		}
	  }
	  // generate image
	  return new Image(48,48,painter,color(255,255,255,0.0))
	}
	// Установка иконки на окна
	view.windowIcon = generateImage()
	view2.windowIcon = generateImage()
	// Установка поверх всех окон
	//view.windowTopmost = true

	// Обновление селектора криптопар в окне параметров
	var setPairs = function(pairs) {
		view2.root.$(#pair).html = pairs
	}

	// Функция по клику второй кнопки мыши на цену
	event mouseup $(#currency) (evt) {
		//view.root.$(body).attributes["role"] = "window-body"
		if (evt.propButton) {
			view2.state = View.WINDOW_SHOWN // показать окно настроек
			return true
		}
		//view.root.$(body).@#role = "window-caption"
	}
	// Функция по клику и главной и второй кнопок мыши на индикацию
	event mouseup $(#options) (evt) {
		if (evt.propButton) {
			view2.state = View.WINDOW_SHOWN // показать окно настроек
			return true
		} else {
			view2.state = View.WINDOW_SHOWN // показать окно настроек
			return true
		}
	}
	// Функция двойного клика главной кнопки мыши (вариант 1)
	event dblclick $(body) (evt) {
		//settingsWindow()
		return true
	}
	// Функция двойного клика главной кнопки мыши (вариант 2)
	view.root.$(body).on("dblclick", function() {
		//settingsWindow()
		return true
	})
	// Функция двойного клика главной кнопки мыши (вариант 3)
	view.root.$(body).onMouse = function (evt) {
		if( evt.type == Event.MOUSE_DCLICK ) {
			//settingsWindow()
		}
	}
	// Функция клика кнопки "OK" окна настроек
	view2.root.$(#ok).on("click", function(){
		view2.state = View.WINDOW_HIDDEN
		settingsApply()
	})
	// Функция клика кнопки "Применить" окна настроек
	view2.root.$(#apply).on("click", function(){
		settingsApply()
	})
	// Функция клика кнопки "Сброс" окна настроек
	view2.root.$(#reset).on("click", function(){
		settingsReset()
	})
	// Функция клика кнопки "Закрыть" окна настроек
	view2.root.$(#close).on("click", function(){
		view2.state = View.WINDOW_HIDDEN
		settingsReset()
	})
	// Функция клика кнопки "Выход" окна настроек
	view2.root.$(#exit).on("click", function(){
		view.goExit("")
	})
	// Событие выбора криптобиржи окна настроек
	view2.root.$(#exchange).on("change", function(){
		view.pairs(view2.root.$(#exchange).value)
	})
	// Функция изменения флага звукового оповещения
	view2.root.$(#sounds).on("change", function(){
		view.flagSounds("set", view2.root.$(#sounds).checked)
	})
	// Функция установки новых настроек
	var settingsApply = function(){
		view.root.$(#exchange).html = view2.root.$(#exchange).value.toUpperCase()
		view.root.$(#pair).html = view2.root.$(#pair).value.toUpperCase()
		view.settingsSet(
			view2.root.$(#exchange).value,		// биржа
			view2.root.$(#pair).value,			// криптопара
			view2.root.$(#sounds).checked,			// флаг звукооповещения
			"")
	}
	// Функция отображения текущих настроек
	var settingsReset = function(){
		view2.root.$(#exchange).html = view.htmlExchanges() // криптобиржи
		view.root.timer(100, function(){
			view.pairs() // криптопары
		})
		view2.root.$(#sounds).checked = view.flagSounds() // флаг звукового оповещения
		view.settingsSet()
	}
//})()
